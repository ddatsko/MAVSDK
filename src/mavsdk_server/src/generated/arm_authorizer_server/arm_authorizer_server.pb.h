// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: arm_authorizer_server/arm_authorizer_server.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_arm_5fauthorizer_5fserver_2farm_5fauthorizer_5fserver_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_arm_5fauthorizer_5fserver_2farm_5fauthorizer_5fserver_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "mavsdk_options.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_arm_5fauthorizer_5fserver_2farm_5fauthorizer_5fserver_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_arm_5fauthorizer_5fserver_2farm_5fauthorizer_5fserver_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_arm_5fauthorizer_5fserver_2farm_5fauthorizer_5fserver_2eproto;
namespace mavsdk {
namespace rpc {
namespace arm_authorizer {
class AcceptArmAuthorizationRequest;
struct AcceptArmAuthorizationRequestDefaultTypeInternal;
extern AcceptArmAuthorizationRequestDefaultTypeInternal _AcceptArmAuthorizationRequest_default_instance_;
class AcceptArmAuthorizationResponse;
struct AcceptArmAuthorizationResponseDefaultTypeInternal;
extern AcceptArmAuthorizationResponseDefaultTypeInternal _AcceptArmAuthorizationResponse_default_instance_;
class RejectArmAuthorizationRequest;
struct RejectArmAuthorizationRequestDefaultTypeInternal;
extern RejectArmAuthorizationRequestDefaultTypeInternal _RejectArmAuthorizationRequest_default_instance_;
class RejectArmAuthorizationResponse;
struct RejectArmAuthorizationResponseDefaultTypeInternal;
extern RejectArmAuthorizationResponseDefaultTypeInternal _RejectArmAuthorizationResponse_default_instance_;
class SubscribeArmAuthorizationRequest;
struct SubscribeArmAuthorizationRequestDefaultTypeInternal;
extern SubscribeArmAuthorizationRequestDefaultTypeInternal _SubscribeArmAuthorizationRequest_default_instance_;
class SubscribeArmAuthorizationResponse;
struct SubscribeArmAuthorizationResponseDefaultTypeInternal;
extern SubscribeArmAuthorizationResponseDefaultTypeInternal _SubscribeArmAuthorizationResponse_default_instance_;
}  // namespace arm_authorizer
}  // namespace rpc
}  // namespace mavsdk
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace mavsdk {
namespace rpc {
namespace arm_authorizer {
enum CommandAnswer : int {
  COMMAND_ANSWER_ACCEPTED = 0,
  COMMAND_ANSWER_FAILED = 1,
  CommandAnswer_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  CommandAnswer_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool CommandAnswer_IsValid(int value);
extern const uint32_t CommandAnswer_internal_data_[];
constexpr CommandAnswer CommandAnswer_MIN = static_cast<CommandAnswer>(0);
constexpr CommandAnswer CommandAnswer_MAX = static_cast<CommandAnswer>(1);
constexpr int CommandAnswer_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
CommandAnswer_descriptor();
template <typename T>
const std::string& CommandAnswer_Name(T value) {
  static_assert(std::is_same<T, CommandAnswer>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to CommandAnswer_Name().");
  return CommandAnswer_Name(static_cast<CommandAnswer>(value));
}
template <>
inline const std::string& CommandAnswer_Name(CommandAnswer value) {
  return ::google::protobuf::internal::NameOfDenseEnum<CommandAnswer_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool CommandAnswer_Parse(absl::string_view name, CommandAnswer* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CommandAnswer>(
      CommandAnswer_descriptor(), name, value);
}
enum RejectionReason : int {
  REASON_GENERIC = 0,
  REASON_NONE = 1,
  REASON_INVALID_WAYPOINT = 2,
  REASON_TIMEOUT = 3,
  REASON_AIRSPACE_IN_USE = 4,
  REASON_BAD_WEATHER = 5,
  RejectionReason_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  RejectionReason_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool RejectionReason_IsValid(int value);
extern const uint32_t RejectionReason_internal_data_[];
constexpr RejectionReason RejectionReason_MIN = static_cast<RejectionReason>(0);
constexpr RejectionReason RejectionReason_MAX = static_cast<RejectionReason>(5);
constexpr int RejectionReason_ARRAYSIZE = 5 + 1;
const ::google::protobuf::EnumDescriptor*
RejectionReason_descriptor();
template <typename T>
const std::string& RejectionReason_Name(T value) {
  static_assert(std::is_same<T, RejectionReason>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to RejectionReason_Name().");
  return RejectionReason_Name(static_cast<RejectionReason>(value));
}
template <>
inline const std::string& RejectionReason_Name(RejectionReason value) {
  return ::google::protobuf::internal::NameOfDenseEnum<RejectionReason_descriptor,
                                                 0, 5>(
      static_cast<int>(value));
}
inline bool RejectionReason_Parse(absl::string_view name, RejectionReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RejectionReason>(
      RejectionReason_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class SubscribeArmAuthorizationResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.arm_authorizer.SubscribeArmAuthorizationResponse) */ {
 public:
  inline SubscribeArmAuthorizationResponse() : SubscribeArmAuthorizationResponse(nullptr) {}
  ~SubscribeArmAuthorizationResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeArmAuthorizationResponse(::google::protobuf::internal::ConstantInitialized);

  inline SubscribeArmAuthorizationResponse(const SubscribeArmAuthorizationResponse& from)
      : SubscribeArmAuthorizationResponse(nullptr, from) {}
  SubscribeArmAuthorizationResponse(SubscribeArmAuthorizationResponse&& from) noexcept
    : SubscribeArmAuthorizationResponse() {
    *this = ::std::move(from);
  }

  inline SubscribeArmAuthorizationResponse& operator=(const SubscribeArmAuthorizationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeArmAuthorizationResponse& operator=(SubscribeArmAuthorizationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeArmAuthorizationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubscribeArmAuthorizationResponse* internal_default_instance() {
    return reinterpret_cast<const SubscribeArmAuthorizationResponse*>(
               &_SubscribeArmAuthorizationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SubscribeArmAuthorizationResponse& a, SubscribeArmAuthorizationResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SubscribeArmAuthorizationResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeArmAuthorizationResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeArmAuthorizationResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SubscribeArmAuthorizationResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubscribeArmAuthorizationResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SubscribeArmAuthorizationResponse& from) {
    SubscribeArmAuthorizationResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SubscribeArmAuthorizationResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.arm_authorizer.SubscribeArmAuthorizationResponse";
  }
  protected:
  explicit SubscribeArmAuthorizationResponse(::google::protobuf::Arena* arena);
  SubscribeArmAuthorizationResponse(::google::protobuf::Arena* arena, const SubscribeArmAuthorizationResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSystemIdFieldNumber = 1,
  };
  // uint32 system_id = 1;
  void clear_system_id() ;
  ::uint32_t system_id() const;
  void set_system_id(::uint32_t value);

  private:
  ::uint32_t _internal_system_id() const;
  void _internal_set_system_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.arm_authorizer.SubscribeArmAuthorizationResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint32_t system_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_arm_5fauthorizer_5fserver_2farm_5fauthorizer_5fserver_2eproto;
};// -------------------------------------------------------------------

class SubscribeArmAuthorizationRequest final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:mavsdk.rpc.arm_authorizer.SubscribeArmAuthorizationRequest) */ {
 public:
  inline SubscribeArmAuthorizationRequest() : SubscribeArmAuthorizationRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeArmAuthorizationRequest(::google::protobuf::internal::ConstantInitialized);

  inline SubscribeArmAuthorizationRequest(const SubscribeArmAuthorizationRequest& from)
      : SubscribeArmAuthorizationRequest(nullptr, from) {}
  SubscribeArmAuthorizationRequest(SubscribeArmAuthorizationRequest&& from) noexcept
    : SubscribeArmAuthorizationRequest() {
    *this = ::std::move(from);
  }

  inline SubscribeArmAuthorizationRequest& operator=(const SubscribeArmAuthorizationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeArmAuthorizationRequest& operator=(SubscribeArmAuthorizationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeArmAuthorizationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubscribeArmAuthorizationRequest* internal_default_instance() {
    return reinterpret_cast<const SubscribeArmAuthorizationRequest*>(
               &_SubscribeArmAuthorizationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SubscribeArmAuthorizationRequest& a, SubscribeArmAuthorizationRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SubscribeArmAuthorizationRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeArmAuthorizationRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeArmAuthorizationRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SubscribeArmAuthorizationRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SubscribeArmAuthorizationRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SubscribeArmAuthorizationRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.arm_authorizer.SubscribeArmAuthorizationRequest";
  }
  protected:
  explicit SubscribeArmAuthorizationRequest(::google::protobuf::Arena* arena);
  SubscribeArmAuthorizationRequest(::google::protobuf::Arena* arena, const SubscribeArmAuthorizationRequest& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.arm_authorizer.SubscribeArmAuthorizationRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_arm_5fauthorizer_5fserver_2farm_5fauthorizer_5fserver_2eproto;
};// -------------------------------------------------------------------

class RejectArmAuthorizationResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.arm_authorizer.RejectArmAuthorizationResponse) */ {
 public:
  inline RejectArmAuthorizationResponse() : RejectArmAuthorizationResponse(nullptr) {}
  ~RejectArmAuthorizationResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RejectArmAuthorizationResponse(::google::protobuf::internal::ConstantInitialized);

  inline RejectArmAuthorizationResponse(const RejectArmAuthorizationResponse& from)
      : RejectArmAuthorizationResponse(nullptr, from) {}
  RejectArmAuthorizationResponse(RejectArmAuthorizationResponse&& from) noexcept
    : RejectArmAuthorizationResponse() {
    *this = ::std::move(from);
  }

  inline RejectArmAuthorizationResponse& operator=(const RejectArmAuthorizationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RejectArmAuthorizationResponse& operator=(RejectArmAuthorizationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RejectArmAuthorizationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const RejectArmAuthorizationResponse* internal_default_instance() {
    return reinterpret_cast<const RejectArmAuthorizationResponse*>(
               &_RejectArmAuthorizationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(RejectArmAuthorizationResponse& a, RejectArmAuthorizationResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(RejectArmAuthorizationResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RejectArmAuthorizationResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RejectArmAuthorizationResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RejectArmAuthorizationResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RejectArmAuthorizationResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RejectArmAuthorizationResponse& from) {
    RejectArmAuthorizationResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RejectArmAuthorizationResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.arm_authorizer.RejectArmAuthorizationResponse";
  }
  protected:
  explicit RejectArmAuthorizationResponse(::google::protobuf::Arena* arena);
  RejectArmAuthorizationResponse(::google::protobuf::Arena* arena, const RejectArmAuthorizationResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCommandAnswerFieldNumber = 1,
  };
  // .mavsdk.rpc.arm_authorizer.CommandAnswer command_answer = 1;
  void clear_command_answer() ;
  ::mavsdk::rpc::arm_authorizer::CommandAnswer command_answer() const;
  void set_command_answer(::mavsdk::rpc::arm_authorizer::CommandAnswer value);

  private:
  ::mavsdk::rpc::arm_authorizer::CommandAnswer _internal_command_answer() const;
  void _internal_set_command_answer(::mavsdk::rpc::arm_authorizer::CommandAnswer value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.arm_authorizer.RejectArmAuthorizationResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    int command_answer_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_arm_5fauthorizer_5fserver_2farm_5fauthorizer_5fserver_2eproto;
};// -------------------------------------------------------------------

class RejectArmAuthorizationRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.arm_authorizer.RejectArmAuthorizationRequest) */ {
 public:
  inline RejectArmAuthorizationRequest() : RejectArmAuthorizationRequest(nullptr) {}
  ~RejectArmAuthorizationRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RejectArmAuthorizationRequest(::google::protobuf::internal::ConstantInitialized);

  inline RejectArmAuthorizationRequest(const RejectArmAuthorizationRequest& from)
      : RejectArmAuthorizationRequest(nullptr, from) {}
  RejectArmAuthorizationRequest(RejectArmAuthorizationRequest&& from) noexcept
    : RejectArmAuthorizationRequest() {
    *this = ::std::move(from);
  }

  inline RejectArmAuthorizationRequest& operator=(const RejectArmAuthorizationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RejectArmAuthorizationRequest& operator=(RejectArmAuthorizationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RejectArmAuthorizationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RejectArmAuthorizationRequest* internal_default_instance() {
    return reinterpret_cast<const RejectArmAuthorizationRequest*>(
               &_RejectArmAuthorizationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(RejectArmAuthorizationRequest& a, RejectArmAuthorizationRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(RejectArmAuthorizationRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RejectArmAuthorizationRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RejectArmAuthorizationRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RejectArmAuthorizationRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RejectArmAuthorizationRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RejectArmAuthorizationRequest& from) {
    RejectArmAuthorizationRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RejectArmAuthorizationRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.arm_authorizer.RejectArmAuthorizationRequest";
  }
  protected:
  explicit RejectArmAuthorizationRequest(::google::protobuf::Arena* arena);
  RejectArmAuthorizationRequest(::google::protobuf::Arena* arena, const RejectArmAuthorizationRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTemporarilyFieldNumber = 1,
    kReasonFieldNumber = 2,
    kExtraInfoFieldNumber = 3,
  };
  // bool temporarily = 1;
  void clear_temporarily() ;
  bool temporarily() const;
  void set_temporarily(bool value);

  private:
  bool _internal_temporarily() const;
  void _internal_set_temporarily(bool value);

  public:
  // .mavsdk.rpc.arm_authorizer.RejectionReason reason = 2;
  void clear_reason() ;
  ::mavsdk::rpc::arm_authorizer::RejectionReason reason() const;
  void set_reason(::mavsdk::rpc::arm_authorizer::RejectionReason value);

  private:
  ::mavsdk::rpc::arm_authorizer::RejectionReason _internal_reason() const;
  void _internal_set_reason(::mavsdk::rpc::arm_authorizer::RejectionReason value);

  public:
  // int32 extra_info = 3;
  void clear_extra_info() ;
  ::int32_t extra_info() const;
  void set_extra_info(::int32_t value);

  private:
  ::int32_t _internal_extra_info() const;
  void _internal_set_extra_info(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.arm_authorizer.RejectArmAuthorizationRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    bool temporarily_;
    int reason_;
    ::int32_t extra_info_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_arm_5fauthorizer_5fserver_2farm_5fauthorizer_5fserver_2eproto;
};// -------------------------------------------------------------------

class AcceptArmAuthorizationResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.arm_authorizer.AcceptArmAuthorizationResponse) */ {
 public:
  inline AcceptArmAuthorizationResponse() : AcceptArmAuthorizationResponse(nullptr) {}
  ~AcceptArmAuthorizationResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AcceptArmAuthorizationResponse(::google::protobuf::internal::ConstantInitialized);

  inline AcceptArmAuthorizationResponse(const AcceptArmAuthorizationResponse& from)
      : AcceptArmAuthorizationResponse(nullptr, from) {}
  AcceptArmAuthorizationResponse(AcceptArmAuthorizationResponse&& from) noexcept
    : AcceptArmAuthorizationResponse() {
    *this = ::std::move(from);
  }

  inline AcceptArmAuthorizationResponse& operator=(const AcceptArmAuthorizationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AcceptArmAuthorizationResponse& operator=(AcceptArmAuthorizationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AcceptArmAuthorizationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AcceptArmAuthorizationResponse* internal_default_instance() {
    return reinterpret_cast<const AcceptArmAuthorizationResponse*>(
               &_AcceptArmAuthorizationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(AcceptArmAuthorizationResponse& a, AcceptArmAuthorizationResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(AcceptArmAuthorizationResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AcceptArmAuthorizationResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AcceptArmAuthorizationResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AcceptArmAuthorizationResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AcceptArmAuthorizationResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AcceptArmAuthorizationResponse& from) {
    AcceptArmAuthorizationResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AcceptArmAuthorizationResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.arm_authorizer.AcceptArmAuthorizationResponse";
  }
  protected:
  explicit AcceptArmAuthorizationResponse(::google::protobuf::Arena* arena);
  AcceptArmAuthorizationResponse(::google::protobuf::Arena* arena, const AcceptArmAuthorizationResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCommandAnswerFieldNumber = 1,
  };
  // .mavsdk.rpc.arm_authorizer.CommandAnswer command_answer = 1;
  void clear_command_answer() ;
  ::mavsdk::rpc::arm_authorizer::CommandAnswer command_answer() const;
  void set_command_answer(::mavsdk::rpc::arm_authorizer::CommandAnswer value);

  private:
  ::mavsdk::rpc::arm_authorizer::CommandAnswer _internal_command_answer() const;
  void _internal_set_command_answer(::mavsdk::rpc::arm_authorizer::CommandAnswer value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.arm_authorizer.AcceptArmAuthorizationResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    int command_answer_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_arm_5fauthorizer_5fserver_2farm_5fauthorizer_5fserver_2eproto;
};// -------------------------------------------------------------------

class AcceptArmAuthorizationRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.arm_authorizer.AcceptArmAuthorizationRequest) */ {
 public:
  inline AcceptArmAuthorizationRequest() : AcceptArmAuthorizationRequest(nullptr) {}
  ~AcceptArmAuthorizationRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AcceptArmAuthorizationRequest(::google::protobuf::internal::ConstantInitialized);

  inline AcceptArmAuthorizationRequest(const AcceptArmAuthorizationRequest& from)
      : AcceptArmAuthorizationRequest(nullptr, from) {}
  AcceptArmAuthorizationRequest(AcceptArmAuthorizationRequest&& from) noexcept
    : AcceptArmAuthorizationRequest() {
    *this = ::std::move(from);
  }

  inline AcceptArmAuthorizationRequest& operator=(const AcceptArmAuthorizationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AcceptArmAuthorizationRequest& operator=(AcceptArmAuthorizationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AcceptArmAuthorizationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AcceptArmAuthorizationRequest* internal_default_instance() {
    return reinterpret_cast<const AcceptArmAuthorizationRequest*>(
               &_AcceptArmAuthorizationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(AcceptArmAuthorizationRequest& a, AcceptArmAuthorizationRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(AcceptArmAuthorizationRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AcceptArmAuthorizationRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AcceptArmAuthorizationRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AcceptArmAuthorizationRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AcceptArmAuthorizationRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AcceptArmAuthorizationRequest& from) {
    AcceptArmAuthorizationRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AcceptArmAuthorizationRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "mavsdk.rpc.arm_authorizer.AcceptArmAuthorizationRequest";
  }
  protected:
  explicit AcceptArmAuthorizationRequest(::google::protobuf::Arena* arena);
  AcceptArmAuthorizationRequest(::google::protobuf::Arena* arena, const AcceptArmAuthorizationRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValidTimeFieldNumber = 1,
  };
  // int32 valid_time = 1;
  void clear_valid_time() ;
  ::int32_t valid_time() const;
  void set_valid_time(::int32_t value);

  private:
  ::int32_t _internal_valid_time() const;
  void _internal_set_valid_time(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:mavsdk.rpc.arm_authorizer.AcceptArmAuthorizationRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t valid_time_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_arm_5fauthorizer_5fserver_2farm_5fauthorizer_5fserver_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SubscribeArmAuthorizationRequest

// -------------------------------------------------------------------

// SubscribeArmAuthorizationResponse

// uint32 system_id = 1;
inline void SubscribeArmAuthorizationResponse::clear_system_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.system_id_ = 0u;
}
inline ::uint32_t SubscribeArmAuthorizationResponse::system_id() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.arm_authorizer.SubscribeArmAuthorizationResponse.system_id)
  return _internal_system_id();
}
inline void SubscribeArmAuthorizationResponse::set_system_id(::uint32_t value) {
  _internal_set_system_id(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.arm_authorizer.SubscribeArmAuthorizationResponse.system_id)
}
inline ::uint32_t SubscribeArmAuthorizationResponse::_internal_system_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.system_id_;
}
inline void SubscribeArmAuthorizationResponse::_internal_set_system_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.system_id_ = value;
}

// -------------------------------------------------------------------

// AcceptArmAuthorizationRequest

// int32 valid_time = 1;
inline void AcceptArmAuthorizationRequest::clear_valid_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.valid_time_ = 0;
}
inline ::int32_t AcceptArmAuthorizationRequest::valid_time() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.arm_authorizer.AcceptArmAuthorizationRequest.valid_time)
  return _internal_valid_time();
}
inline void AcceptArmAuthorizationRequest::set_valid_time(::int32_t value) {
  _internal_set_valid_time(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.arm_authorizer.AcceptArmAuthorizationRequest.valid_time)
}
inline ::int32_t AcceptArmAuthorizationRequest::_internal_valid_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.valid_time_;
}
inline void AcceptArmAuthorizationRequest::_internal_set_valid_time(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.valid_time_ = value;
}

// -------------------------------------------------------------------

// AcceptArmAuthorizationResponse

// .mavsdk.rpc.arm_authorizer.CommandAnswer command_answer = 1;
inline void AcceptArmAuthorizationResponse::clear_command_answer() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.command_answer_ = 0;
}
inline ::mavsdk::rpc::arm_authorizer::CommandAnswer AcceptArmAuthorizationResponse::command_answer() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.arm_authorizer.AcceptArmAuthorizationResponse.command_answer)
  return _internal_command_answer();
}
inline void AcceptArmAuthorizationResponse::set_command_answer(::mavsdk::rpc::arm_authorizer::CommandAnswer value) {
  _internal_set_command_answer(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.arm_authorizer.AcceptArmAuthorizationResponse.command_answer)
}
inline ::mavsdk::rpc::arm_authorizer::CommandAnswer AcceptArmAuthorizationResponse::_internal_command_answer() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::mavsdk::rpc::arm_authorizer::CommandAnswer>(_impl_.command_answer_);
}
inline void AcceptArmAuthorizationResponse::_internal_set_command_answer(::mavsdk::rpc::arm_authorizer::CommandAnswer value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.command_answer_ = value;
}

// -------------------------------------------------------------------

// RejectArmAuthorizationRequest

// bool temporarily = 1;
inline void RejectArmAuthorizationRequest::clear_temporarily() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.temporarily_ = false;
}
inline bool RejectArmAuthorizationRequest::temporarily() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.arm_authorizer.RejectArmAuthorizationRequest.temporarily)
  return _internal_temporarily();
}
inline void RejectArmAuthorizationRequest::set_temporarily(bool value) {
  _internal_set_temporarily(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.arm_authorizer.RejectArmAuthorizationRequest.temporarily)
}
inline bool RejectArmAuthorizationRequest::_internal_temporarily() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.temporarily_;
}
inline void RejectArmAuthorizationRequest::_internal_set_temporarily(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.temporarily_ = value;
}

// .mavsdk.rpc.arm_authorizer.RejectionReason reason = 2;
inline void RejectArmAuthorizationRequest::clear_reason() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.reason_ = 0;
}
inline ::mavsdk::rpc::arm_authorizer::RejectionReason RejectArmAuthorizationRequest::reason() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.arm_authorizer.RejectArmAuthorizationRequest.reason)
  return _internal_reason();
}
inline void RejectArmAuthorizationRequest::set_reason(::mavsdk::rpc::arm_authorizer::RejectionReason value) {
  _internal_set_reason(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.arm_authorizer.RejectArmAuthorizationRequest.reason)
}
inline ::mavsdk::rpc::arm_authorizer::RejectionReason RejectArmAuthorizationRequest::_internal_reason() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::mavsdk::rpc::arm_authorizer::RejectionReason>(_impl_.reason_);
}
inline void RejectArmAuthorizationRequest::_internal_set_reason(::mavsdk::rpc::arm_authorizer::RejectionReason value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.reason_ = value;
}

// int32 extra_info = 3;
inline void RejectArmAuthorizationRequest::clear_extra_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.extra_info_ = 0;
}
inline ::int32_t RejectArmAuthorizationRequest::extra_info() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.arm_authorizer.RejectArmAuthorizationRequest.extra_info)
  return _internal_extra_info();
}
inline void RejectArmAuthorizationRequest::set_extra_info(::int32_t value) {
  _internal_set_extra_info(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.arm_authorizer.RejectArmAuthorizationRequest.extra_info)
}
inline ::int32_t RejectArmAuthorizationRequest::_internal_extra_info() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.extra_info_;
}
inline void RejectArmAuthorizationRequest::_internal_set_extra_info(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.extra_info_ = value;
}

// -------------------------------------------------------------------

// RejectArmAuthorizationResponse

// .mavsdk.rpc.arm_authorizer.CommandAnswer command_answer = 1;
inline void RejectArmAuthorizationResponse::clear_command_answer() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.command_answer_ = 0;
}
inline ::mavsdk::rpc::arm_authorizer::CommandAnswer RejectArmAuthorizationResponse::command_answer() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.arm_authorizer.RejectArmAuthorizationResponse.command_answer)
  return _internal_command_answer();
}
inline void RejectArmAuthorizationResponse::set_command_answer(::mavsdk::rpc::arm_authorizer::CommandAnswer value) {
  _internal_set_command_answer(value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.arm_authorizer.RejectArmAuthorizationResponse.command_answer)
}
inline ::mavsdk::rpc::arm_authorizer::CommandAnswer RejectArmAuthorizationResponse::_internal_command_answer() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::mavsdk::rpc::arm_authorizer::CommandAnswer>(_impl_.command_answer_);
}
inline void RejectArmAuthorizationResponse::_internal_set_command_answer(::mavsdk::rpc::arm_authorizer::CommandAnswer value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.command_answer_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace arm_authorizer
}  // namespace rpc
}  // namespace mavsdk


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::mavsdk::rpc::arm_authorizer::CommandAnswer> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::mavsdk::rpc::arm_authorizer::CommandAnswer>() {
  return ::mavsdk::rpc::arm_authorizer::CommandAnswer_descriptor();
}
template <>
struct is_proto_enum<::mavsdk::rpc::arm_authorizer::RejectionReason> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::mavsdk::rpc::arm_authorizer::RejectionReason>() {
  return ::mavsdk::rpc::arm_authorizer::RejectionReason_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_arm_5fauthorizer_5fserver_2farm_5fauthorizer_5fserver_2eproto_2epb_2eh
