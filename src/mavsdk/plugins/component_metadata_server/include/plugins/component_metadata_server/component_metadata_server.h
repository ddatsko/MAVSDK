// WARNING: THIS FILE IS AUTOGENERATED! As such, it should not be edited.
// Edits need to be made to the proto files
// (see
// https://github.com/mavlink/MAVSDK-Proto/blob/main/protos/component_metadata_server/component_metadata_server.proto)

#pragma once

#include <array>
#include <cmath>
#include <functional>
#include <limits>
#include <memory>
#include <string>
#include <utility>
#include <vector>

#include "server_plugin_base.h"

#include "handle.h"

namespace mavsdk {

class ServerComponent;
class ComponentMetadataServerImpl;

/**
 * @brief Provide component metadata such as parameters.
 */
class ComponentMetadataServer : public ServerPluginBase {
public:
    /**
     * @brief Constructor. Creates the plugin for a ServerComponent instance.
     *
     * The plugin is typically created as shown below:
     *
     *     ```cpp
     *     auto component_metadata_server = ComponentMetadataServer(server_component);
     *     ```
     *
     * @param server_component The ServerComponent instance associated with this server plugin.
     */
    explicit ComponentMetadataServer(std::shared_ptr<ServerComponent> server_component);

    /**
     * @brief Destructor (internal use only).
     */
    ~ComponentMetadataServer() override;

    enum class MetadataType {
        Parameter,
        Events,
        Actuators,
    };

    struct Metadata {
        MetadataType type;
        std::string json_data;
    };

    void set_metadata(const std::vector<Metadata>& metadata);

    /**
     * @brief Copy constructor.
     */
    ComponentMetadataServer(const ComponentMetadataServer& other);

    /**
     * @brief Equality operator (object is not copyable).
     */
    const ComponentMetadataServer& operator=(const ComponentMetadataServer&) = delete;

private:
    /** @private Underlying implementation, set at instantiation */
    std::unique_ptr<ComponentMetadataServerImpl> _impl;
};

} // namespace mavsdk